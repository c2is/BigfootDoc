=== Présentation
BigFoot est un CMF (Content Management Framework) développé sur la base du framework Symfony 2 et de l'ORM Doctrine. Il fournit un back office simple mais très évolutif : chaque fonctionnalité peut être facilement étendue par le développeur qui veut y injecter des spécificités métiers.

Voici la liste non exhaustive de ses fonctionnalités natives :
* gestion des utilisateurs et des rôles,
* gestion des langues,
* gestion de contextes,
* gestion de flux externes ou internes (imports),
* gestion des images (portfolio),
* gestion des menus,
* gestion des contenus éditoriaux,
* gestion des metadata SEO.

=== Installation rapide
[[[bash
git clone git@github.com:c2is/Bigfoot.git your_project
cd your_project
curl -sS https://getcomposer.org/installer | php
php composer.phar install
./app/console doctrine:database:create
./app/console doctrine:schema:update --force
./app/console doctrine:fixtures:load
sudo setfacl -R -m u:www-data:rwx -m u:`whoami`:rwx app/cache/
sudo setfacl -dR -m u:www-data:rwx -m u:`whoami`:rwx app/cache/
sudo setfacl -R -m u:www-data:rwx -m u:`whoami`:rwx app/logs/
sudo setfacl -dR -m u:www-data:rwx -m u:`whoami`:rwx app/logs/
./app/console bigfoot:theme:install (--symlink)
./app/console assetic:dump --env=admin
./app/console assetic:dump --env=admin_dev
]]]

=== Installation détaillée
Cloner le project
[[[bash
git clone git@github.com:c2is/Bigfoot.git your_project
]]]

Installer les dépendances avec Composer:
[[[bash
cd your_project
curl -sS https://getcomposer.org/installer | php
php composer.phar install
]]]
Si vous n'avez pas indiqué les paramétrages lors de l'installation, paramétrez votre base de données avec l'interface web de configuration standard de Symfony 2 :
[[[bash
/app_dev.php/_configurator/step/0
]]]

Si vous n'avez pas créé au préalable la base de données, Doctrine peut le faire pour vous (c'est une commande sécurisée qui peut être lancée même si la base avait été créée) :
[[[bash
./app/console doctrine:database:create
]]]

Créez le schéma de base et chargez les données de test :
[[[bash
./app/console doctrine:schema:update --force
./app/console doctrine:fixtures:load
]]]

Paramétrez les droits sur les répertoires de cache et de logs :
[[[bash
sudo setfacl -R -m u:www-data:rwx -m u:`whoami`:rwx app/cache/
sudo setfacl -dR -m u:www-data:rwx -m u:`whoami`:rwx app/cache/
sudo setfacl -R -m u:www-data:rwx -m u:`whoami`:rwx app/logs/
sudo setfacl -dR -m u:www-data:rwx -m u:`whoami`:rwx app/logs/
]]]

Sur Macosx lancez plutôt ces commandes
[[[bash
sudo chmod -R +a "`whoami` allow delete,write,append,file_inherit,directory_inherit" app/cache/
sudo chmod -R +a "`whoami` allow delete,write,append,file_inherit,directory_inherit" app/logs/
sudo chmod -R +a "_www allow delete,write,append,file_inherit,directory_inherit" app/cache/
sudo chmod -R +a "_www allow delete,write,append,file_inherit,directory_inherit" app/logs/
]]]

Les "assets" de Bigfoot ne sont pas dans l'habituel répertoire public/ dans Resources/ ; ils ne sont pas correctement installés avec l'habituel commande assets:install.
Utilisez cette commande :
[[[bash
./app/console bigfoot:theme:install (--symlink)
]]]

Cette commande installe les assets du back office BigFoot mais exécute également assets:install.
Si vous la lancez avec l'option symlink, les assets seront installés par le biais de liens symboliques (au lieu d'une copie physique) ce qui est préférable en environnement de développement (pas besoin de relancer cette commande à chaque modification de css ou js).

Les assets de Bigfoot sont chargés via Assetic et sont ignorés par git. Pour que le back office s'affiche correctement en environnement de production vous devez exportez ces assets de la manière suivante :
[[[bash
./app/console assetic:dump --env=admin
./app/console assetic:dump --env=admin_dev
]]]